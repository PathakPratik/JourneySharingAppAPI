version: '3'
services:
  api:
    image: journey_sharing_app:v1
    entrypoint: python app.py
    ports:
      - '5000:5000'
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: on-failure:15
    environment:
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
  api2:
    image: journey_sharing_app:v1
    entrypoint: python app.py
    ports:
      - '5001:5001'
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: on-failure:15
    environment:
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
  api3:
    image: journey_sharing_app:v1
    entrypoint: python app.py
    ports:
      - '5002:5002'
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: on-failure:15
    environment:
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
  api4:
    image: journey_sharing_app:v1
    entrypoint: python app.py
    ports:
      - '5004:5004'
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    restart: on-failure:15
    environment:
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
  db:
    container_name: "mysql_container"
    image: mysql_container:1.0.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysqlvol:/var/lib/mysql
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  redis:
    image: redis
    ports:
      - "6379:6379"
  loadbalancer:
    image: loadbalancer:v1
    ports:
      - "8000:8000"
    volumes:
      - ./LoadBalancer:/app
  websocketserver:
    image: web_socket_server:v1
    entrypoint: npm start
    ports:
      - '3000:3000'
    volumes:
          - ./websocketserver:/app
    depends_on:
      - redis
      - api
  # reoutehandler:
  #  image: nginix_route_handler:1.0.0
  #  ports:
  #   - 80:80

volumes:
  mysqlvol: null
